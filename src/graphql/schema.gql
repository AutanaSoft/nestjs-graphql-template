# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumRolesFilter {
  equals: Roles
  in: [Roles!]
  not: NestedEnumRolesFilter
  notIn: [Roles!]
}

input EnumStatusFilter {
  equals: Status
  in: [Status!]
  not: NestedEnumStatusFilter
  notIn: [Status!]
}

type Mutation {
  createUser(data: UserModelCreateInput!): UserModel!
  updateUser(data: UserModelUpdateInput!, where: UserModelWhereUniqueInput!): UserModel!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumRolesFilter {
  equals: Roles
  in: [Roles!]
  not: NestedEnumRolesFilter
  notIn: [Roles!]
}

input NestedEnumStatusFilter {
  equals: Status
  in: [Status!]
  not: NestedEnumStatusFilter
  notIn: [Status!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedUuidFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidFilter
  notIn: [String!]
}

type Query {
  getHello(name: String!): String!
}

enum QueryMode {
  default
  insensitive
}

enum Roles {
  ADMIN
  CUSTOMER
  GUEST
  INTERNAL
}

enum Status {
  ACTIVE
  BANNED
  DELETED
  FROZEN
  INACTIVE
  LOCKED
  REGISTERED
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  MeUpdates: UserModel
}

type UserModel {
  createdAt: DateTime!
  email: String!
  id: ID!
  roles: Roles!
  status: Status!
  updatedAt: DateTime!
  userName: String
}

type UserModelCountAggregate {
  _all: Int!
  createdAt: Int!
  email: Int!
  id: Int!
  roles: Int!
  status: Int!
  updatedAt: Int!
  userName: Int!
}

input UserModelCreateInput {
  email: String!
  password: String!
  roles: Roles
  status: Status
  userName: String
}

type UserModelMaxAggregate {
  createdAt: DateTime
  email: String
  id: String
  roles: Roles
  status: Status
  updatedAt: DateTime
  userName: String
}

type UserModelMinAggregate {
  createdAt: DateTime
  email: String
  id: String
  roles: Roles
  status: Status
  updatedAt: DateTime
  userName: String
}

input UserModelUpdateInput {
  email: String
  password: String
  roles: Roles
  status: Status
  userName: String
}

input UserModelWhereInput {
  AND: [UserModelWhereInput!]
  NOT: [UserModelWhereInput!]
  OR: [UserModelWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  id: UuidFilter
  password: StringFilter
  roles: EnumRolesFilter
  status: EnumStatusFilter
  updatedAt: DateTimeFilter
  userName: StringNullableFilter
}

input UserModelWhereUniqueInput {
  AND: [UserModelWhereInput!]
  NOT: [UserModelWhereInput!]
  OR: [UserModelWhereInput!]
  createdAt: DateTimeFilter
  email: String
  id: String
  password: StringFilter
  roles: EnumRolesFilter
  status: EnumStatusFilter
  updatedAt: DateTimeFilter
  userName: StringNullableFilter
}

input UuidFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidFilter
  notIn: [String!]
}